version: "3.5"
services:
  zk-1:
    image: confluentinc/cp-zookeeper:${version_confluent}
    hostname: zk-1
    networks:
      - confluent
    ports:
      - "17071:7071"
    volumes:
      - data-zk-1:/var/lib/zookeeper
      - ./config/agents:/agents
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 4000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zk-1:2888:3888
#      ZOOKEEPER_SERVERS: zk-1:2888:3888;zk-2:2888:3888;zk-3:2888:3888
      KAFKA_OPTS: "-javaagent:/agents/jmx_prometheus_javaagent-0.13.0.jar=7071:/agents/zookeeper.yaml"

#  zk-2:
#    image: confluentinc/cp-zookeeper:${version_confluent}
#    hostname: zk-2
#    networks:
#      - confluent
#    volumes:
#      - data-zk-2:/var/lib/zookeeper
#      - ./config/agents:/agents
#    environment:
#      ZOOKEEPER_SERVER_ID: 2
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 4000
#      ZOOKEEPER_INIT_LIMIT: 5
#      ZOOKEEPER_SYNC_LIMIT: 2
#      ZOOKEEPER_SERVERS: zk-1:2888:3888;zk-2:2888:3888;zk-3:2888:3888
#      KAFKA_OPTS: "-javaagent:/agents/jmx_prometheus_javaagent-0.13.0.jar=7071:/agents/zookeeper.yaml"
#
#  zk-3:
#    image: confluentinc/cp-zookeeper:${version_confluent}
#    hostname: zk-3
#    networks:
#      - confluent
#    volumes:
#      - data-zk-3:/var/lib/zookeeper
#      - ./config/agents:/agents
#    environment:
#      ZOOKEEPER_SERVER_ID: 3
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 4000
#      ZOOKEEPER_INIT_LIMIT: 5
#      ZOOKEEPER_SYNC_LIMIT: 2
#      ZOOKEEPER_SERVERS: zk-1:2888:3888;zk-2:2888:3888;zk-3:2888:3888
#      KAFKA_OPTS: "-javaagent:/agents/jmx_prometheus_javaagent-0.13.0.jar=7071:/agents/zookeeper.yaml"

  kafka-1:
    image: confluentinc/cp-enterprise-kafka:${version_confluent}
    hostname: kafka-1
    networks:
      - confluent
    ports:
      - "27071:7071"
      - "9092:9092"
      - "19092:19092"
    volumes:
      - data-kafka-1:/var/lib/kafka/data
      - ./config/cruise-control/jar:/usr/share1/java/kafka
      - ./config/agents:/agents
    depends_on:
      - zk-1
    environment:
      KAFKA_BROKER_ID: 101
      KAFKA_ZOOKEEPER_CONNECT: zk-1:2181
      #      KAFKA_ZOOKEEPER_CONNECT: zk-1:2181,zk-2:2181,zk-3:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_HOURS: 6
      KAFKA_METRIC_REPORTERS: "io.confluent.metrics.reporter.ConfluentMetricsReporter,com.linkedin.kafka.cruisecontrol.metricsreporter.CruiseControlMetricsReporter"
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: "kafka-1:9092,kafka-2:9092,kafka-3:9092"
      #      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092,kafka-2:9092,kafka-3:9092
      #      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092,CONNECTIONS_FROM_HOST://localhost:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONNECTIONS_FROM_HOST:PLAINTEXT
      KAFKA_LOG4J_LOGGERS: "kafka.log=INFO,kafka.cluster=INFO,kafka.coordinator=INFO,kafka.controller=INFO,kafka.server=INFO,state.change.logger=INFO"
      KAFKA_OPTS: "-cp /usr/bin/../share/java/kafka/*:/usr/bin/../share1/java/kafka/*:/usr/bin/../share/java/confluent-telemetry/* -javaagent:/agents/jmx_prometheus_javaagent-0.13.0.jar=7071:/agents/kafka.yaml"

  kafka-2:
    image: confluentinc/cp-enterprise-kafka:${version_confluent}
    hostname: kafka-2
    networks:
      - confluent
    volumes:
      - data-kafka-2:/var/lib/kafka/data
      - ./config/cruise-control/jar:/usr/share1/java/kafka
      - ./config/agents:/agents
    depends_on:
      - zk-1
    environment:
      KAFKA_BROKER_ID: 102
      KAFKA_ZOOKEEPER_CONNECT: zk-1:2181
#      KAFKA_ZOOKEEPER_CONNECT: zk-1:2181,zk-2:2181,zk-3:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_HOURS: 6
      KAFKA_METRIC_REPORTERS: "io.confluent.metrics.reporter.ConfluentMetricsReporter,com.linkedin.kafka.cruisecontrol.metricsreporter.CruiseControlMetricsReporter"
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: "kafka-1:9092,kafka-2:9092,kafka-3:9092"
      #      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092,kafka-2:9092,kafka-3:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_LOG4J_LOGGERS: "kafka.log=INFO,kafka.cluster=INFO,kafka.coordinator=INFO,kafka.controller=INFO,kafka.server=INFO,state.change.logger=INFO"
      KAFKA_OPTS: "-cp /usr/bin/../share/java/kafka/*:/usr/bin/../share1/java/kafka/*:/usr/bin/../share/java/confluent-telemetry/* -javaagent:/agents/jmx_prometheus_javaagent-0.13.0.jar=7071:/agents/kafka.yaml"

  kafka-3:
    image: confluentinc/cp-enterprise-kafka:${version_confluent}
    hostname: kafka-3
    networks:
      - confluent
    volumes:
      - data-kafka-3:/var/lib/kafka/data
      - ./config/cruise-control/jar:/usr/share1/java/kafka
      - ./config/agents:/agents
    depends_on:
      - zk-1
    environment:
      KAFKA_BROKER_ID: 103
      KAFKA_ZOOKEEPER_CONNECT: zk-1:2181
      #      KAFKA_ZOOKEEPER_CONNECT: zk-1:2181,zk-2:2181,zk-3:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_HOURS: 6
      KAFKA_METRIC_REPORTERS: "io.confluent.metrics.reporter.ConfluentMetricsReporter,com.linkedin.kafka.cruisecontrol.metricsreporter.CruiseControlMetricsReporter"
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: "kafka-1:9092,kafka-2:9092,kafka-3:9092"
      #      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092,kafka-2:9092,kafka-3:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-3:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_LOG4J_LOGGERS: "kafka.log=INFO,kafka.cluster=INFO,kafka.coordinator=INFO,kafka.controller=INFO,kafka.server=INFO,state.change.logger=INFO"
      KAFKA_OPTS: "-cp /usr/bin/../share/java/kafka/*:/usr/bin/../share1/java/kafka/*:/usr/bin/../share/java/confluent-telemetry/* -javaagent:/agents/jmx_prometheus_javaagent-0.13.0.jar=7071:/agents/kafka.yaml"

  schema-registry:
    image: confluentinc/cp-schema-registry:${version_confluent}
    hostname: schema-registry
    networks:
      - confluent
    ports:
      - "8081:8081"
    depends_on:
      - kafka-1
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "kafka-1:9092"
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081

  tools:
    image: cnfltraining/training-tools:${training_tools_version}
    hostname: tools
    networks:
      - confluent
    ports:
      - "37071:7071"
      - "37072:7072"
    volumes:
      - ./config/agents:/agents
      - ./config/clients:/clients
    command: /bin/sh
    tty: true

  prometheus:
    image: prom/prometheus:latest
    hostname: prometheus
    networks:
      - confluent
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.retention.time=6h'
    volumes:
      - ./config/prometheus:/etc/prometheus
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    hostname: grafana
    networks:
      - confluent
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning
      - ./config/grafana/dashboards:/var/lib/grafana/dashboards
      - ./config/grafana/plugins:/var/lib/grafana/plugins

  akhq:
    image: tchiotludo/akhq:latest
    hostname: akhq
    networks:
      - confluent
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            server:
              properties:
                bootstrap.servers: "kafka-1:9092"
              schema-registry:
                url: "http://schema-registry:8081"
              connect:
                - name: connect
                  url: "http://connect:8083"
    ports:
      - "8080:8080"

  cruise-control:
    image: adobe/cruise-control
    hostname: cruise-control
    networks:
      - confluent
    volumes:
      - ./config/cruise-control/config:/opt/cruise-control/config
    ports:
      - "8090:8090"

  datagen-ref:
    image: cnfltraining/training-tools:${training_tools_version}
    hostname: datagen-ref
    networks:
      - confluent
    command: "bash -c 'ksql-datagen \
                bootstrap-server=kafka-1:9092 \
                schema=/datagen/ref_user.json \
                schemaRegistryUrl=http://schema-registry:8081 \
                format=avro \
                topic=topic_ref_in \
                key=userid \
                msgRate=1'"
    volumes:
      - ./config/datagen:/datagen
    depends_on:
      - kafka-1
      - schema-registry
      - create-topics

  datagen:
    image: cnfltraining/training-tools:${training_tools_version}
    hostname: datagen
    networks:
      - confluent
    command: "bash -c 'ksql-datagen \
                bootstrap-server=kafka-1:9092 \
                schema=/datagen/user.json \
                schemaRegistryUrl=http://schema-registry:8081 \
                format=avro \
                topic=topic_in \
                key=userid \
                msgRate=5'"
    volumes:
      - ./config/datagen:/datagen
    depends_on:
      - kafka-1
      - schema-registry
      - create-topics

  create-topics:
    image: confluentinc/cp-enterprise-kafka:${version_confluent}
    hostname: create-topics
    networks:
      - confluent
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
                           cub kafka-ready -b kafka-1:9092 1 300 && \
                           echo Creating topics... && \
                           kafka-topics --bootstrap-server kafka-1:9092 --create --topic __CruiseControlMetrics --replication-factor 1 --partitions 3 && \
                           kafka-topics --bootstrap-server kafka-1:9092 --create --topic __KafkaCruiseControlPartitionMetricSamples --replication-factor 1 --partitions 3 && \
                           kafka-topics --bootstrap-server kafka-1:9092 --create --topic topic_ref_in --replication-factor 1 --partitions 3 && \
                           kafka-topics --bootstrap-server kafka-1:9092 --create --topic topic_in --replication-factor 1 --partitions 3 && \
                           kafka-topics --bootstrap-server kafka-1:9092 --create --topic topic_state_less_out --replication-factor 1 --partitions 3 && \
                           kafka-topics --bootstrap-server kafka-1:9092 --create --topic topic_state_full_count_out --replication-factor 1 --partitions 3 && \
                           kafka-topics --bootstrap-server kafka-1:9092 --create --topic topic_state_full_count_by_windows_out --replication-factor 1 --partitions 3 && \
                           kafka-topics --bootstrap-server kafka-1:9092 --create --topic topic_state_join_out --replication-factor 1 --partitions 3 && \
                           kafka-topics --bootstrap-server kafka-1:9092 --create --topic test --replication-factor 1 --partitions 3'"
    depends_on:
      - kafka-1
    environment:
      KSQL_CONFIG_DIR: "/etc/ksql"
      KSQL_LOG4J_OPTS: "-Dlog4j.configuration=file:/etc/ksql/log4j.properties"
      STREAMS_BOOTSTRAP_SERVERS: kafka-1:9092

volumes:
  data-zk-1:
  data-zk-2:
  data-zk-3:
  data-kafka-1:
  data-kafka-2:
  data-kafka-3:
  grafana-storage:

networks:
  confluent:
